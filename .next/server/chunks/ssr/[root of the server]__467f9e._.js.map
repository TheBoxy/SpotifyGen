{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/pages/_app.tsx"],"sourcesContent":["// pages/_app.tsx\nimport { SessionProvider } from \"next-auth/react\";\nimport type { AppProps } from \"next/app\";\nimport '../pages/index.css'; // Or wherever your CSS is located\nimport Head from 'next/head';\n\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return (\n    \n    <SessionProvider session={pageProps.session}>\n      <link rel=\"icon\" href=\"/favicon.ico\" />\n      <Component {...pageProps} />\n    </SessionProvider>\n  );\n}\n\nexport default MyApp;\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;AACjB;;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC/C,qBAEE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS,UAAU,OAAO;;0BACzC,qKAAC;gBAAK,KAAI;gBAAO,MAAK;;;;;;0BACtB,qKAAC;gBAAW,GAAG,SAAS;;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/pages/Home.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"gradientAnimation\": \"Home-module__3v8E6a__gradientAnimation\",\n  \"main\": \"Home-module__3v8E6a__main\",\n  \"scrolling-card\": \"Home-module__3v8E6a__scrolling-card\",\n  \"spin\": \"Home-module__3v8E6a__spin\",\n  \"spinner\": \"Home-module__3v8E6a__spinner\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/pages/index.tsx"],"sourcesContent":["import { useSession, signIn, signOut } from \"next-auth/react\";\nimport { useState } from \"react\";\nimport styles from './Home.module.css'; // Import the CSS module\n\n\n\ninterface Track {\n  album: {\n    images: { url: string }[];\n  };\n  name: string;\n  artists: { name: string }[];\n}\n\ninterface TracksResponse {\n  items: Track[];\n}\n\ninterface GptResponse {\n  era: string;\n  header: string;\n}\n\nexport default function Home() {\n  const { data: session } = useSession();\n  const [era, setEra] = useState<string | null>(null);\n  const [header, setHeader] = useState<string>(\"Your Current Era\");\n  const [tracks, setTracks] = useState<Track[]>([]);\n  const [showTracks, setShowTracks] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const refreshAccessToken = async () => {\n    \n    const res = await fetch(\"/api/spotify/refresh-token\");\n    const data = await res.json();\n    \n\n    if (res.ok) {\n        if (session) {\n          session.accessToken = data.accessToken;\n          session.refreshToken = data.refreshToken;\n        }\n      }\n   \n  };\n\n  const handleGenerateEra = async () => {\n    setLoading(true);\n    if (!session) {\n      console.error(\"No session found\");\n      setLoading(false);\n      return;\n    }\n\n    let tracksRes = await fetch(\"/api/spotify/top-tracks\", {\n      headers: {\n        Authorization: `Bearer ${session.accessToken}`,\n      },\n    });\n\n    if (tracksRes.status === 401) {\n      await refreshAccessToken();\n      tracksRes = await fetch(\"/api/spotify/top-tracks\", {\n        headers: {\n          Authorization: `Bearer ${session.accessToken}`,\n        },\n      });\n    }\n\n    const tracksData: TracksResponse = await tracksRes.json();\n    \n    if (Array.isArray(tracksData.items)) {\n      setTracks(tracksData.items);\n      setShowTracks(true); // Show the tracks section after fetching the tracks\n    } else {\n      console.error(\"tracksData.items is not an array\", tracksData.items);\n      setLoading(false);\n      return;\n    }\n\n    const res = await fetch(\"/api/gpt/generate-era\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ tracks: tracksData.items })\n    });\n    \n    const gptRes: GptResponse = await res.json();\n    setEra(gptRes.era);\n    setHeader(gptRes.header);\n    setLoading(false);\n  };\n\n  return (\n    \n    <main className={`${styles.main} flex flex-col items-center justify-center h-screen text-white p-6`}>\n      <h1 className=\"text-5xl font-extrabold drop-shadow-lg text-center mb-6\">Spotify Era Generator</h1>\n      {session ? (\n        <div className=\"flex flex-col items-center gap-6 mt-6 p-6 bg-gray-200 text-black rounded-xl shadow-lg w-full max-w-4xl\">\n          <button\n            onClick={handleGenerateEra}\n            className=\"mb-4 px-6 py-3 bg-green-500 hover:bg-green-600 text-white font-bold rounded-lg shadow-md transition-all\"\n          >\n            Generate Your Era\n          </button>\n          {loading && <div className={styles.spinner}></div>}\n          {showTracks && !loading && (\n            <div className=\"flex flex-row gap-6 mt-6 w-full\">\n              <div className=\"flex flex-col bg-gray-100 p-4 rounded-lg shadow-md w-1/3\">\n                <h2 className=\"text-xl font-bold mb-3\">Top Tracks (Month)</h2>\n                {tracks.map((track, index) => (\n                  <div key={index} className=\"flex items-center gap-3 mb-2\">\n                    <img src={track.album.images[0].url} alt={track.name} className=\"w-12 h-12 rounded-md\" />\n                    <p className=\"text-sm font-medium\">{track.name} by {track.artists.map(artist => artist.name).join(\", \")}</p>\n                  </div>\n                ))}\n              </div>\n              <div className={`flex flex-col items-center bg-gray-100 p-6 rounded-lg shadow-md w-2/3 max-h-96 overflow-y-auto`}>\n                <h2 className=\"text-2xl font-bold mb-4\">{header}</h2>\n                {era && (\n                  <div className=\"p-4 bg-white border border-gray-300 rounded-lg shadow-lg flex flex-col items-center w-full\">\n                    <p className=\"text-lg font-semibold text-center break-words w-full\">{era}</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          <button\n            onClick={() => signOut()}\n            className=\"mt-4 px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg shadow-md transition-all\"\n          >\n            Sign Out\n          </button>\n        </div>\n      ) : (\n        <button\n          onClick={() => signIn(\"spotify\")}\n          className=\"mt-6 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-lg shadow-lg transition-all\"\n        >\n          Sign in with Spotify\n        </button>\n      )}\n    </main>\n  );\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}