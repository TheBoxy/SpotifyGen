{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/pages/_app.tsx"],"sourcesContent":["// pages/_app.tsx\nimport { SessionProvider } from \"next-auth/react\";\nimport type { AppProps } from \"next/app\";\nimport '../pages/index.css'; // Or wherever your CSS is located\n\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return (\n    \n    <SessionProvider session={pageProps.session}>\n      <link rel=\"icon\" href=\"/favicon.ico\" />\n      <Component {...pageProps} />\n    </SessionProvider>\n  );\n}\n\nexport default MyApp;\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;AACjB;;;;AAKA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC/C,qBAEE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS,UAAU,OAAO;;0BACzC,qKAAC;gBAAK,KAAI;gBAAO,MAAK;;;;;;0BACtB,qKAAC;gBAAW,GAAG,SAAS;;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/pages/Home.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"gradientAnimation\": \"Home-module__3v8E6a__gradientAnimation\",\n  \"main\": \"Home-module__3v8E6a__main\",\n  \"scrolling-card\": \"Home-module__3v8E6a__scrolling-card\",\n  \"spin\": \"Home-module__3v8E6a__spin\",\n  \"spinner\": \"Home-module__3v8E6a__spinner\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/pages/index.tsx"],"sourcesContent":["import { useSession, signIn, signOut, getSession } from \"next-auth/react\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport styles from './Home.module.css'; // Import the CSS module\n\n\n\ninterface Track {\n  album: {\n    images: { url: string }[];\n  };\n  name: string;\n  artists: { name: string }[];\n}\n\ninterface TracksResponse {\n  items: Track[];\n}\n\ninterface GptResponse {\n  era: string;\n  header: string;\n}\n\ntype TimeRange = 'short_term' | 'medium_term' | 'long_term';\n\ninterface TimeRangeOption {\n  value: TimeRange;\n  label: string;\n  description: string;\n}\n\nexport default function Home() {\n  const { data: session, update: updateSession } = useSession();\n  const [era, setEra] = useState<string | null>(null);\n  const [header, setHeader] = useState<string>(\"Your Current Era\");\n  const [tracks, setTracks] = useState<Track[]>([]);\n  const [showTracks, setShowTracks] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [selectedTimeRange, setSelectedTimeRange] = useState<TimeRange>(\"short_term\");\n  const [timeRangeChanged, setTimeRangeChanged] = useState<boolean>(false);\n\n  const timeRangeOptions: TimeRangeOption[] = [\n    { value: \"short_term\", label: \"Last Month\", description: \"Your top tracks from the past 4 weeks\" },\n    { value: \"medium_term\", label: \"Last 6 Months\", description: \"Your top tracks from the past 6 months\" },\n    { value: \"long_term\", label: \"Last 12+ Months\", description: \"Your top tracks from the past several years\" }\n  ];\n  \n  // Reset the page when time period changes\n  useEffect(() => {\n    // Reset to default state, similar to initial load\n    setEra(null);\n    setHeader(\"Your Current Era\");\n    setTracks([]);\n    setShowTracks(false);\n    \n    // Only set this to true if it's not the initial render\n    if (selectedTimeRange) {\n      setTimeRangeChanged(true);\n    }\n  }, [selectedTimeRange]);\n  \n  // Create a function to handle time range selection\n  const handleTimeRangeSelect = (newTimeRange: TimeRange) => {\n    if (newTimeRange !== selectedTimeRange) {\n      setSelectedTimeRange(newTimeRange);\n      // Additional reset logic is handled by the useEffect above\n    }\n  };\n\n  const refreshAccessToken = useCallback(async () => {\n    try {\n      console.log(\"Refreshing access token...\");\n      const res = await fetch(\"/api/spotify/refresh-token\");\n      \n      if (!res.ok) {\n        console.error(\"Failed to refresh token:\", await res.text());\n        return false;\n      }\n      \n      const data = await res.json();\n      \n      // Update the session with the new tokens using the update method from useSession\n      await updateSession({\n        accessToken: data.accessToken,\n        refreshToken: data.refreshToken || (session?.refreshToken as string)\n      });\n      \n      console.log(\"Token refreshed successfully\");\n      return true;\n    } catch (error) {\n      console.error(\"Error refreshing token:\", error);\n      return false;\n    }\n  }, [session, updateSession]);\n\n  const handleGenerateEra = async () => {\n    setLoading(true);\n    setEra(null); // Reset any previous era data\n    setTimeRangeChanged(false); // Reset the prompt when generating\n    \n    try {\n      if (!session) {\n        console.error(\"No session found\");\n        setLoading(false);\n        return;\n      }\n\n      // Function to fetch tracks with the current token\n      const fetchTracks = async (token: string) => {\n        const response = await fetch(`/api/spotify/top-tracks?timeRange=${selectedTimeRange}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        return response;\n      };\n\n      // First attempt using current token\n      let tracksRes = await fetchTracks(session.accessToken as string);\n\n      // If unauthorized, try to refresh token and retry\n      if (tracksRes.status === 401 || tracksRes.status === 403) {\n        console.log(\"Token expired, attempting to refresh...\");\n        const refreshSuccessful = await refreshAccessToken();\n        \n        if (!refreshSuccessful) {\n          console.error(\"Failed to refresh token, signing out\");\n          signOut();\n          setLoading(false);\n          return;\n        }\n\n        // Get the updated session\n        const updatedSession = await getSession();\n        if (!updatedSession?.accessToken) {\n          console.error(\"No token after refresh, signing out\");\n          signOut();\n          setLoading(false);\n          return;\n        }\n        \n        // Retry with new token\n        tracksRes = await fetchTracks(updatedSession.accessToken as string);\n        \n        // If still failing, give up\n        if (tracksRes.status === 401 || tracksRes.status === 403) {\n          console.error(\"Still unauthorized after token refresh\");\n          signOut();\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Handle other API errors\n      if (!tracksRes.ok) {\n        console.error(\"Failed to fetch tracks:\", await tracksRes.text());\n        setLoading(false);\n        return;\n      }\n\n      const tracksData = await tracksRes.json();\n      \n      if (!Array.isArray(tracksData.items)) {\n        console.error(\"tracksData.items is not an array\", tracksData);\n        setLoading(false);\n        return;\n      }\n      \n      setTracks(tracksData.items);\n      setShowTracks(true);\n\n      // Generate the era\n      const res = await fetch(\"/api/gpt/generate-era\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ \n          tracks: tracksData.items,\n          timeRange: selectedTimeRange\n        })\n      });\n      \n      if (!res.ok) {\n        console.error(\"Failed to generate era:\", await res.text());\n        setLoading(false);\n        return;\n      }\n      \n      const gptRes = await res.json();\n      setEra(gptRes.era);\n      setHeader(gptRes.header);\n    } catch (error) {\n      console.error(\"Error generating era:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    \n    <main className={`${styles.main} flex flex-col items-center justify-center h-screen text-white p-6`}>\n      <h1 className=\"text-5xl font-extrabold drop-shadow-lg text-center mb-6\">Spotify Era Generator</h1>\n      {session ? (\n        <div className=\"flex flex-col items-center gap-6 mt-6 p-6 bg-gray-200 text-black rounded-xl shadow-lg w-full max-w-4xl\">\n          <div className=\"w-full max-w-lg\">\n            <h2 className=\"text-lg font-semibold mb-3\">Select Time Period:</h2>\n            <div className=\"flex flex-col gap-2 sm:flex-row sm:gap-4 justify-between mb-4\">\n              {timeRangeOptions.map((option) => (\n                <div \n                  key={option.value}\n                  className={`flex-1 p-3 rounded-lg cursor-pointer transition-all border-2 ${\n                    selectedTimeRange === option.value \n                      ? 'bg-green-500 text-white border-green-600' \n                      : 'bg-gray-100 hover:bg-gray-300 border-gray-300'\n                  }`}\n                  onClick={() => handleTimeRangeSelect(option.value)}\n                >\n                  <h3 className=\"font-bold\">{option.label}</h3>\n                  <p className=\"text-xs mt-1\">{option.description}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {timeRangeChanged && !loading && !showTracks && (\n            <div className=\"text-center p-3 bg-blue-100 text-blue-700 rounded-lg w-full max-w-lg mb-2 animate-pulse\">\n              <p>Time period updated! Click \"Generate Your Era\" to see your new results.</p>\n            </div>\n          )}\n          \n          <button\n            onClick={handleGenerateEra}\n            className={`mb-4 px-6 py-3 ${timeRangeChanged ? 'bg-green-600 animate-pulse' : 'bg-green-500'} hover:bg-green-600 text-white font-bold rounded-lg shadow-md transition-all`}\n          >\n            Generate Your Era\n          </button>\n          \n          {loading && <div className={styles.spinner}></div>}\n          \n          {showTracks && !loading && (\n            <div className=\"flex flex-col md:flex-row gap-6 mt-6 w-full\">\n              <div className=\"flex flex-col bg-gray-100 p-4 rounded-lg shadow-md w-full md:w-1/3\">\n                <h2 className=\"text-xl font-bold mb-3\">\n                  {selectedTimeRange === \"short_term\" ? \"Top Tracks (Last Month)\" : \n                   selectedTimeRange === \"medium_term\" ? \"Top Tracks (Last 6 Months)\" : \n                   \"Top Tracks (Last 12+ Months)\"}\n                </h2>\n                {tracks.map((track, index) => (\n                  <div key={index} className=\"flex items-center gap-3 mb-2\">\n                    <img src={track.album.images[0].url} alt={track.name} className=\"w-12 h-12 rounded-md\" />\n                    <p className=\"text-sm font-medium\">{track.name} by {track.artists.map(artist => artist.name).join(\", \")}</p>\n                  </div>\n                ))}\n              </div>\n              <div className={`flex flex-col items-center bg-gray-100 p-6 rounded-lg shadow-md w-full md:w-2/3 max-h-96 overflow-y-auto`}>\n                <h2 className=\"text-2xl font-bold mb-4\">{header}</h2>\n                {era && (\n                  <div className=\"p-4 bg-white border border-gray-300 rounded-lg shadow-lg flex flex-col items-center w-full\">\n                    <p className=\"text-lg font-semibold text-center break-words w-full\">{era}</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          <button\n            onClick={() => signOut()}\n            className=\"mt-4 px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg shadow-md transition-all\"\n          >\n            Sign Out\n          </button>\n        </div>\n      ) : (\n        <button\n          onClick={() => signIn(\"spotify\")}\n          className=\"mt-6 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-lg shadow-lg transition-all\"\n        >\n          Sign in with Spotify\n        </button>\n      )}\n    </main>\n  );\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}