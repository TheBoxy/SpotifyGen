{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/pages/_app.tsx"],"sourcesContent":["// pages/_app.tsx\nimport { SessionProvider } from \"next-auth/react\";\nimport type { AppProps } from \"next/app\";\nimport '../pages/index.css'; // Or wherever your CSS is located\n\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return (\n    <SessionProvider session={pageProps.session}>\n      <Component {...pageProps} />\n    </SessionProvider>\n  );\n}\n\nexport default MyApp;\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;AACjB;;;;AAKA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC/C,qBACE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS,UAAU,OAAO;kBACzC,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/pages/index.tsx"],"sourcesContent":["import { useSession, signIn, signOut } from \"next-auth/react\";\nimport { useState } from \"react\";\n\nexport default function Home() {\n  const { data: session } = useSession();\n  const [era, setEra] = useState<string | null>(null);\n  const [imageUrl, setImageUrl] = useState<string | null>(null);\n  const [tracks, setTracks] = useState<any[]>([]);\n\n  const handleGenerateEra = async () => {\n   \n    \n    // Fetch top tracks from Spotify\n    const tracksRes = await fetch(\"/api/spotify/top-tracks\");\n    const tracksData = await tracksRes.json();\n    \n    if (Array.isArray(tracksData.items)) {\n      setTracks(tracksData.items);\n    } else {\n      console.error(\"tracksData.items is not an array\", tracksData.items);\n      return;\n    }\n    \n  \n\n    const res = await fetch(\"/api/gpt/generate-era\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ tracks: tracksData.items })\n    });\n    \n    const gptRes = await res.json();\n    setEra(gptRes.era);\n  };\n\n  return (\n    <main className=\"flex flex-col items-center justify-center h-screen bg-gradient-to-r from-purple-500 to-blue-500 text-white p-6\">\n      <h1 className=\"text-5xl font-extrabold drop-shadow-lg text-center mb-6\">Spotify Era Generator</h1>\n      {session ? (\n        <div className=\"flex flex-row gap-6 mt-6 p-6 bg-white text-black rounded-xl shadow-lg w-full max-w-4xl\">\n          <div className=\"flex flex-col bg-gray-100 p-4 rounded-lg shadow-md w-1/3\">\n            <h2 className=\"text-xl font-bold mb-3\">Top 10 Tracks</h2>\n            {tracks.map((track, index) => (\n              <div key={index} className=\"flex items-center gap-3 mb-2\">\n                <img src={track.album.images[0].url} alt={track.name} className=\"w-12 h-12 rounded-md\" />\n                <p className=\"text-sm font-medium\">{track.name} by {track.artists.map(artist => artist.name).join(\", \")}</p>\n              </div>\n            ))}\n          </div>\n          <div className=\"flex flex-col items-center bg-gray-100 p-6 rounded-lg shadow-md w-2/3\">\n            <button\n              onClick={handleGenerateEra}\n              className=\"mb-4 px-6 py-3 bg-green-500 hover:bg-green-600 text-white font-bold rounded-lg shadow-md transition-all\"\n            >\n              Generate Your Era\n            </button>\n            {era && (\n              <div className=\"p-4 bg-white border border-gray-300 rounded-lg shadow-lg flex flex-col items-center w-full max-h-96 overflow-y-auto\">\n                {imageUrl && <img src={imageUrl} alt=\"Era Representation\" className=\"w-full max-w-md rounded-md mb-4\" />}\n                <p className=\"text-lg font-semibold text-center break-words w-full\">{era}</p>\n              </div>\n            )}\n            <button\n              onClick={() => signOut()}\n              className=\"mt-4 px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg shadow-md transition-all\"\n            >\n              Sign Out\n            </button>\n          </div>\n        </div>\n      ) : (\n        <button\n          onClick={() => signIn(\"spotify\")}\n          className=\"mt-6 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-lg shadow-lg transition-all\"\n        >\n          Sign in with Spotify\n        </button>\n      )}\n    </main>\n  );\n}\n\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD;IACnC,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAC9C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAE9C,MAAM,oBAAoB;QAGxB,gCAAgC;QAChC,MAAM,YAAY,MAAM,MAAM;QAC9B,MAAM,aAAa,MAAM,UAAU,IAAI;QAEvC,IAAI,MAAM,OAAO,CAAC,WAAW,KAAK,GAAG;YACnC,UAAU,WAAW,KAAK;QAC5B,OAAO;YACL,QAAQ,KAAK,CAAC,oCAAoC,WAAW,KAAK;YAClE;QACF;QAIA,MAAM,MAAM,MAAM,MAAM,yBAAyB;YAC/C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE,QAAQ,WAAW,KAAK;YAAC;QAClD;QAEA,MAAM,SAAS,MAAM,IAAI,IAAI;QAC7B,OAAO,OAAO,GAAG;IACnB;IAEA,qBACE,qKAAC;QAAK,WAAU;;0BACd,qKAAC;gBAAG,WAAU;0BAA0D;;;;;;YACvE,wBACC,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAG,WAAU;0CAAyB;;;;;;4BACtC,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,qKAAC;oCAAgB,WAAU;;sDACzB,qKAAC;4CAAI,KAAK,MAAM,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG;4CAAE,KAAK,MAAM,IAAI;4CAAE,WAAU;;;;;;sDAChE,qKAAC;4CAAE,WAAU;;gDAAuB,MAAM,IAAI;gDAAC;gDAAK,MAAM,OAAO,CAAC,GAAG,CAAC,CAAA,SAAU,OAAO,IAAI,EAAE,IAAI,CAAC;;;;;;;;mCAF1F;;;;;;;;;;;kCAMd,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;4BAGA,qBACC,qKAAC;gCAAI,WAAU;;oCACZ,0BAAY,qKAAC;wCAAI,KAAK;wCAAU,KAAI;wCAAqB,WAAU;;;;;;kDACpE,qKAAC;wCAAE,WAAU;kDAAwD;;;;;;;;;;;;0CAGzE,qKAAC;gCACC,SAAS,IAAM,CAAA,GAAA,mIAAA,CAAA,UAAO,AAAD;gCACrB,WAAU;0CACX;;;;;;;;;;;;;;;;;qCAML,qKAAC;gBACC,SAAS,IAAM,CAAA,GAAA,mIAAA,CAAA,SAAM,AAAD,EAAE;gBACtB,WAAU;0BACX;;;;;;;;;;;;AAMT"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}