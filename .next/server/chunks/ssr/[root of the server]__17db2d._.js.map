{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/pages/_app.tsx"],"sourcesContent":["// pages/_app.tsx\nimport { SessionProvider } from \"next-auth/react\";\nimport type { AppProps } from \"next/app\";\nimport '../pages/index.css'; // Or wherever your CSS is located\n\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return (\n    \n    <SessionProvider session={pageProps.session}>\n      <link rel=\"icon\" href=\"/favicon.ico\" />\n      <Component {...pageProps} />\n    </SessionProvider>\n  );\n}\n\nexport default MyApp;\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;AACjB;;;;AAKA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC/C,qBAEE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS,UAAU,OAAO;;0BACzC,qKAAC;gBAAK,KAAI;gBAAO,MAAK;;;;;;0BACtB,qKAAC;gBAAW,GAAG,SAAS;;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/pages/Home.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"gradientAnimation\": \"Home-module__3v8E6a__gradientAnimation\",\n  \"main\": \"Home-module__3v8E6a__main\",\n  \"scrollingCard\": \"Home-module__3v8E6a__scrollingCard\",\n  \"spin\": \"Home-module__3v8E6a__spin\",\n  \"spinner\": \"Home-module__3v8E6a__spinner\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/pages/index.tsx"],"sourcesContent":["import { useSession, signIn, signOut, getSession } from \"next-auth/react\";\nimport { useState, useCallback, useEffect, useRef } from \"react\";\nimport styles from './Home.module.css'; // Import the CSS module\nimport Head from 'next/head';\n\n// Function to extract cartoon characters from text\nconst extractCharacters = (text: string) => {\n  if (!text) return [];\n  \n  // Look for bullet points or numbered lists that might contain character information\n  const characterSectionRegex = /cartoon characters that match this vibe[:\\s]*([\\s\\S]*?)(?:\\n\\n|$)/i;\n  const characterSection = text.match(characterSectionRegex);\n  \n  if (!characterSection || !characterSection[1]) return [];\n  \n  // Extract individual character mentions using bullet points or numbers\n  const characterItems = characterSection[1].split(/\\n/).filter(line => line.trim().match(/^[-•*\\d.]/));\n  \n  // Process each character mention to extract name and description\n  return characterItems.map(item => {\n    // Remove bullet point or number\n    const cleanItem = item.replace(/^[-•*\\d.\\s]+/, '').trim();\n    \n    // Try to separate character name from description\n    let name = cleanItem;\n    let description = '';\n    \n    // Look for separators like \":\" or \"-\" or \"—\" to split name and description\n    const separatorMatch = cleanItem.match(/^(.*?)(?:[:\\-—]|\\s+-\\s+|\\s+—\\s+)(.*)/);\n    if (separatorMatch) {\n      name = separatorMatch[1].trim();\n      description = separatorMatch[2].trim();\n    }\n    \n    return { name, description };\n  });\n};\n\n// Function to get image URL for cartoon character (using predefined list)\nconst getCharacterImage = (characterName: string) => {\n  // Lowercase the name for case-insensitive matching\n  const nameLower = characterName.toLowerCase();\n  \n  // Common cartoon characters and their image URLs\n  const characterImages: Record<string, string> = {\n    'spongebob': 'https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png',\n    'patrick': 'https://upload.wikimedia.org/wikipedia/en/thumb/3/33/Patrick_Star.svg/1200px-Patrick_Star.svg.png',\n    'squidward': 'https://upload.wikimedia.org/wikipedia/en/thumb/8/8f/Squidward_Tentacles.svg/1200px-Squidward_Tentacles.svg.png',\n    'lisa simpson': 'https://upload.wikimedia.org/wikipedia/en/thumb/e/ec/Lisa_Simpson.png/220px-Lisa_Simpson.png',\n    'bart simpson': 'https://upload.wikimedia.org/wikipedia/en/a/aa/Bart_Simpson_200px.png',\n    'homer simpson': 'https://upload.wikimedia.org/wikipedia/en/0/02/Homer_Simpson_2006.png',\n    'rick sanchez': 'https://upload.wikimedia.org/wikipedia/en/a/a6/Rick_Sanchez.png',\n    'morty smith': 'https://upload.wikimedia.org/wikipedia/en/a/a8/Rick_and_Morty_characters.jpg',\n    'bojack horseman': 'https://upload.wikimedia.org/wikipedia/en/d/dc/BoJack_Horseman_character.png',\n    'finn': 'https://upload.wikimedia.org/wikipedia/en/thumb/0/0e/Finn_Adventure_Time.png/250px-Finn_Adventure_Time.png',\n    'jake': 'https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/Jake_the_Dog.png/240px-Jake_the_Dog.png',\n    'naruto': 'https://upload.wikimedia.org/wikipedia/en/9/9a/Naruto_Uzumaki.png',\n    'sailor moon': 'https://upload.wikimedia.org/wikipedia/en/thumb/2/2b/Sailor_moon_crystal_character_design_sailor_moon.jpg/220px-Sailor_moon_crystal_character_design_sailor_moon.jpg',\n    'pikachu': 'https://upload.wikimedia.org/wikipedia/en/a/a6/Pokémon_Pikachu_art.png',\n    'mickey mouse': 'https://upload.wikimedia.org/wikipedia/en/d/d4/Mickey_Mouse.png',\n    'bugs bunny': 'https://upload.wikimedia.org/wikipedia/en/1/17/Bugs_Bunny.svg',\n    'steven universe': 'https://upload.wikimedia.org/wikipedia/en/0/05/Steven_Universe.png',\n    'powerpuff girls': 'https://upload.wikimedia.org/wikipedia/en/thumb/c/c6/The_Powerpuff_Girls_%28characters%29.png/250px-The_Powerpuff_Girls_%28characters%29.png',\n    'scooby-doo': 'https://upload.wikimedia.org/wikipedia/en/thumb/9/9a/Scooby-Doo.png/300px-Scooby-Doo.png',\n    'shaggy': 'https://upload.wikimedia.org/wikipedia/en/thumb/6/61/Shaggy_Rogers.png/225px-Shaggy_Rogers.png',\n    'velma': 'https://upload.wikimedia.org/wikipedia/en/9/9d/Velma_Dinkley.png',\n    'garfield': 'https://upload.wikimedia.org/wikipedia/en/thumb/b/bc/Garfield_the_Cat.svg/1200px-Garfield_the_Cat.svg.png',\n    'charlie brown': 'https://upload.wikimedia.org/wikipedia/en/2/22/Charlie_Brown.png',\n    'snoopy': 'https://upload.wikimedia.org/wikipedia/en/5/53/Snoopy_Peanuts.png',\n    'totoro': 'https://upload.wikimedia.org/wikipedia/en/d/df/Totoro_DB.jpg',\n  };\n  \n  // Default fallback image for characters not in our list\n  const defaultImage = 'https://via.placeholder.com/150?text=Character';\n  \n  // Try to find a match for the character\n  for (const [key, url] of Object.entries(characterImages)) {\n    if (nameLower.includes(key)) {\n      return url;\n    }\n  }\n  \n  // If no match is found, return default\n  return defaultImage;\n};\n\n// Function to convert markdown-like text to HTML with enhanced styling\nconst formatEraText = (text: string) => {\n  if (!text) return \"\";\n  \n  // Replace bold text (**text**) with styled spans\n  let formattedText = text.replace(/\\*\\*(.*?)\\*\\*/g, '<span class=\"font-bold text-green-700\">$1</span>');\n  \n  // Add styling to emoji to make them stand out more\n  formattedText = formattedText.replace(/([\\u{1F300}-\\u{1F6FF}\\u{1F900}-\\u{1F9FF}\\u{1F1E0}-\\u{1F1FF}\\u{2600}-\\u{26FF}\\u{2700}-\\u{27BF}])/ug, \n    '<span class=\"text-lg md:text-xl inline-block transform hover:scale-125 transition-transform\">$1</span>');\n  \n  // Split by double line breaks to create paragraphs\n  const paragraphs = formattedText.split(/\\n\\n+/);\n  \n  return paragraphs.map((para, index) => {\n    // Check if this is a bullet list (lines starting with - or • or *)\n    if (para.trim().match(/^[-•*]/m)) {\n      const listItems = para.split(/\\n/).filter(item => item.trim().length > 0);\n      \n      return (\n        <div key={index} className=\"mb-6 bg-gray-50 p-3 rounded-md shadow-sm\">\n          <ul className=\"list-disc pl-5 space-y-2\">\n            {listItems.map((item, i) => (\n              <li key={i} className=\"text-sm md:text-base\" \n                  dangerouslySetInnerHTML={{ __html: item.replace(/^[-•*]\\s*/, '') }} />\n            ))}\n          </ul>\n        </div>\n      );\n    }\n    \n    // Regular paragraph with custom styling for the first paragraph (summary)\n    return (\n      <p key={index} \n         className={`mb-5 text-sm md:text-base leading-relaxed ${index === 0 ? 'font-medium border-l-4 border-purple-400 pl-3 py-1' : ''}`} \n         dangerouslySetInnerHTML={{ __html: para }} />\n    );\n  });\n};\n\ninterface Track {\n  album: {\n    images: { url: string }[];\n  };\n  name: string;\n  artists: { name: string }[];\n}\n\ninterface TracksResponse {\n  items: Track[];\n}\n\ninterface GptResponse {\n  era: string;\n  header: string;\n}\n\ntype TimeRange = 'short_term' | 'medium_term' | 'long_term';\n\ninterface TimeRangeOption {\n  value: TimeRange;\n  label: string;\n  description: string;\n}\n\n// ShareModal Component\nconst ShareModal = ({ isOpen, onClose, header, characters, era }: { \n  isOpen: boolean, \n  onClose: () => void, \n  header: string, \n  characters: { name: string, description: string }[],\n  era: string\n}) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n  \n  const handleCopyLink = () => {\n    // Create a sharable text\n    const shareText = `My Spotify Era is: ${header}\\n\\nMatching Cartoon Characters:\\n${\n      characters.map(char => `- ${char.name}: ${char.description}`).join('\\n')\n    }\\n\\nFind out your era at Spotify Era Generator!`;\n    \n    navigator.clipboard.writeText(shareText)\n      .then(() => alert('Copied to clipboard!'))\n      .catch(err => console.error('Failed to copy: ', err));\n  };\n  \n  const handleDownloadImage = () => {\n    // For simplicity, we're just alerting - a real implementation would use html2canvas or similar\n    alert('Download functionality would capture the card as an image');\n  };\n  \n  // Close modal when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (modalRef.current && !modalRef.current.contains(event.target as Node)) {\n        onClose();\n      }\n    };\n    \n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen, onClose]);\n  \n  if (!isOpen) return null;\n  \n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div ref={modalRef} className=\"bg-white rounded-xl shadow-2xl max-w-md w-full max-h-[90vh] overflow-y-auto\">\n        <div className=\"flex justify-between items-center p-4 border-b\">\n          <h3 className=\"text-xl font-bold text-gray-800\">Share Your Era</h3>\n          <button \n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n        \n        {/* Shareable Card */}\n        <div ref={cardRef} className=\"p-5\">\n          <div className=\"bg-gradient-to-r from-pink-400 via-purple-500 to-blue-500 p-5 rounded-lg shadow-md\">\n            <div className=\"bg-white p-4 rounded-md shadow-inner\">\n              <h2 className=\"text-2xl font-bold text-center text-purple-700 mb-3\">\n                {header}\n              </h2>\n              \n              <p className=\"text-gray-600 text-sm italic text-center mb-4\">\n                My Spotify Era based on my top tracks\n              </p>\n              \n              <div className=\"space-y-4 mb-4\">\n                <h3 className=\"font-medium text-gray-700 border-b pb-1\">\n                  Cartoon Characters That Match My Vibe:\n                </h3>\n                \n                {characters.map((char, idx) => (\n                  <div key={idx} className=\"flex items-center gap-3 p-2 bg-gray-50 rounded-md\">\n                    <img \n                      src={getCharacterImage(char.name)} \n                      alt={char.name}\n                      className=\"w-16 h-16 object-cover rounded-full\"\n                    />\n                    <div>\n                      <h4 className=\"font-bold text-purple-600\">{char.name}</h4>\n                      <p className=\"text-sm text-gray-600\">{char.description}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"text-center text-sm text-gray-500\">\n                Generate your Spotify Era at Spotify Era Generator\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Action Buttons */}\n        <div className=\"flex p-4 border-t bg-gray-50\">\n          <button \n            onClick={handleCopyLink}\n            className=\"flex-1 mr-2 py-2 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Copy to Clipboard\n          </button>\n          <button \n            onClick={handleDownloadImage}\n            className=\"flex-1 ml-2 py-2 px-4 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n          >\n            Download as Image\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default function Home() {\n  const { data: session, update: updateSession } = useSession();\n  const [era, setEra] = useState<string | null>(null);\n  const [header, setHeader] = useState<string>(\"Your Current Era\");\n  const [tracks, setTracks] = useState<Track[]>([]);\n  const [showTracks, setShowTracks] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [selectedTimeRange, setSelectedTimeRange] = useState<TimeRange>(\"short_term\");\n  const [timeRangeChanged, setTimeRangeChanged] = useState<boolean>(false);\n  \n  // New state for share modal\n  const [isShareModalOpen, setIsShareModalOpen] = useState<boolean>(false);\n  const [characters, setCharacters] = useState<{ name: string, description: string }[]>([]);\n\n  const timeRangeOptions: TimeRangeOption[] = [\n    { value: \"short_term\", label: \"Last Month\", description: \"Your top tracks from the past 4 weeks\" },\n    { value: \"medium_term\", label: \"Last 6 Months\", description: \"Your top tracks from the past 6 months\" },\n    { value: \"long_term\", label: \"Last 12+ Months\", description: \"Your top tracks from the past several years\" }\n  ];\n  \n  // Reset the page when time period changes\n  useEffect(() => {\n    // Reset to default state, similar to initial load\n    setEra(null);\n    setHeader(\"Your Current Era\");\n    setTracks([]);\n    setShowTracks(false);\n    \n    // Only set this to true if it's not the initial render\n    if (selectedTimeRange) {\n      setTimeRangeChanged(true);\n    }\n  }, [selectedTimeRange]);\n  \n  // Create a function to handle time range selection\n  const handleTimeRangeSelect = (newTimeRange: TimeRange) => {\n    if (newTimeRange !== selectedTimeRange) {\n      setSelectedTimeRange(newTimeRange);\n      // Additional reset logic is handled by the useEffect above\n    }\n  };\n\n  const refreshAccessToken = useCallback(async () => {\n    try {\n      console.log(\"Refreshing access token...\");\n      const res = await fetch(\"/api/spotify/refresh-token\");\n      \n      if (!res.ok) {\n        console.error(\"Failed to refresh token:\", await res.text());\n        return false;\n      }\n      \n      const data = await res.json();\n      \n      // Update the session with the new tokens using the update method from useSession\n      await updateSession({\n        accessToken: data.accessToken,\n        refreshToken: data.refreshToken || (session?.refreshToken as string)\n      });\n      \n      console.log(\"Token refreshed successfully\");\n      return true;\n    } catch (error) {\n      console.error(\"Error refreshing token:\", error);\n      return false;\n    }\n  }, [session, updateSession]);\n\n  const handleGenerateEra = async () => {\n    setLoading(true);\n    setEra(null); // Reset any previous era data\n    setTimeRangeChanged(false); // Reset the prompt when generating\n    \n    try {\n      if (!session) {\n        console.error(\"No session found\");\n        setLoading(false);\n        return;\n      }\n\n      // Function to fetch tracks with the current token\n      const fetchTracks = async (token: string) => {\n        const response = await fetch(`/api/spotify/top-tracks?timeRange=${selectedTimeRange}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        return response;\n      };\n\n      // First attempt using current token\n      let tracksRes = await fetchTracks(session.accessToken as string);\n\n      // If unauthorized, try to refresh token and retry\n      if (tracksRes.status === 401 || tracksRes.status === 403) {\n        console.log(\"Token expired, attempting to refresh...\");\n        const refreshSuccessful = await refreshAccessToken();\n        \n        if (!refreshSuccessful) {\n          console.error(\"Failed to refresh token, signing out\");\n          signOut();\n          setLoading(false);\n          return;\n        }\n\n        // Get the updated session\n        const updatedSession = await getSession();\n        if (!updatedSession?.accessToken) {\n          console.error(\"No token after refresh, signing out\");\n          signOut();\n          setLoading(false);\n          return;\n        }\n        \n        // Retry with new token\n        tracksRes = await fetchTracks(updatedSession.accessToken as string);\n        \n        // If still failing, give up\n        if (tracksRes.status === 401 || tracksRes.status === 403) {\n          console.error(\"Still unauthorized after token refresh\");\n          signOut();\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Handle other API errors\n      if (!tracksRes.ok) {\n        console.error(\"Failed to fetch tracks:\", await tracksRes.text());\n        setLoading(false);\n        return;\n      }\n\n      const tracksData = await tracksRes.json();\n      \n      if (!Array.isArray(tracksData.items)) {\n        console.error(\"tracksData.items is not an array\", tracksData);\n        setLoading(false);\n        return;\n      }\n      \n      setTracks(tracksData.items);\n      setShowTracks(true);\n\n      // Generate the era\n      const res = await fetch(\"/api/gpt/generate-era\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ \n          tracks: tracksData.items,\n          timeRange: selectedTimeRange\n        })\n      });\n      \n      if (!res.ok) {\n        console.error(\"Failed to generate era:\", await res.text());\n        setLoading(false);\n        return;\n      }\n      \n      const gptRes = await res.json();\n      setEra(gptRes.era);\n      setHeader(gptRes.header);\n      \n      // Extract cartoon characters for sharing\n      const extractedCharacters = extractCharacters(gptRes.era);\n      setCharacters(extractedCharacters);\n      \n    } catch (error) {\n      console.error(\"Error generating era:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Function to open share modal\n  const handleOpenShareModal = () => {\n    setIsShareModalOpen(true);\n  };\n\n  return (\n    <>\n      <Head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\" />\n        <title>Spotify Era Generator</title>\n      </Head>\n      \n      <main className={`${styles.main} flex flex-col items-center px-4 py-6 min-h-screen text-white`}>\n        <h1 className=\"text-3xl md:text-5xl font-extrabold drop-shadow-lg text-center mb-4 md:mb-6\">Spotify Era Generator</h1>\n        {session ? (\n          <div className=\"flex flex-col items-center gap-4 p-4 md:p-6 bg-gray-200 text-black rounded-xl shadow-lg w-full max-w-4xl overflow-hidden\">\n            <div className=\"w-full\">\n              <h2 className=\"text-lg font-semibold mb-2\">Select Time Period:</h2>\n              <div className=\"flex flex-col gap-2 sm:flex-row sm:gap-3 justify-between mb-3\">\n                {timeRangeOptions.map((option) => (\n                  <div \n                    key={option.value}\n                    className={`flex-1 p-2 md:p-3 rounded-lg cursor-pointer transition-all border-2 ${\n                      selectedTimeRange === option.value \n                        ? 'bg-green-500 text-white border-green-600' \n                        : 'bg-gray-100 hover:bg-gray-300 border-gray-300'\n                    }`}\n                    onClick={() => handleTimeRangeSelect(option.value)}\n                  >\n                    <h3 className=\"font-bold text-sm md:text-base\">{option.label}</h3>\n                    <p className=\"text-xs mt-1 hidden sm:block\">{option.description}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            {timeRangeChanged && !loading && !showTracks && (\n              <div className=\"text-center p-2 md:p-3 bg-blue-100 text-blue-700 rounded-lg w-full mb-2 animate-pulse\">\n                <p className=\"text-sm md:text-base\">Time period updated! Click \"Generate Your Era\" to see your new results.</p>\n              </div>\n            )}\n            \n            <button\n              onClick={handleGenerateEra}\n              className={`w-full md:w-auto mb-3 px-4 py-2 md:px-6 md:py-3 ${timeRangeChanged ? 'bg-green-600 animate-pulse' : 'bg-green-500'} hover:bg-green-600 text-white font-bold rounded-lg shadow-md transition-all`}\n            >\n              Generate Your Era\n            </button>\n            \n            {loading && <div className={styles.spinner}></div>}\n            \n            {showTracks && !loading && (\n              <div className=\"flex flex-col md:flex-row w-full gap-4 overflow-hidden\">\n                <div className=\"flex flex-col bg-gray-100 p-3 rounded-lg shadow-md w-full md:w-1/3\">\n                  <h2 className=\"text-lg md:text-xl font-bold mb-2\">\n                    {selectedTimeRange === \"short_term\" ? \"Top Tracks (Last Month)\" : \n                     selectedTimeRange === \"medium_term\" ? \"Top Tracks (Last 6 Months)\" : \n                     \"Top Tracks (Last 12+ Months)\"}\n                  </h2>\n                  <div className={`${styles.scrollingCard} flex flex-col gap-1 overflow-y-auto px-1 py-1 max-h-48 md:max-h-[calc(100vh-22rem)]`}>\n                    {tracks.map((track, index) => (\n                      <div key={index} className=\"flex items-center gap-2 mb-1 p-1 border-b border-gray-100\">\n                        <img src={track.album.images[0].url} alt={track.name} className=\"w-10 h-10 rounded-md flex-shrink-0\" />\n                        <p className=\"text-sm font-medium line-clamp-2 flex-1\">{track.name} by {track.artists.map(artist => artist.name).join(\", \")}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                \n                <div className=\"flex flex-col bg-gray-100 p-3 md:p-4 rounded-lg shadow-md w-full md:w-2/3\">\n                  <div className=\"flex items-center justify-center mb-3 md:mb-4\">\n                    <div className=\"h-px bg-gradient-to-r from-transparent via-green-500 to-transparent w-12 md:w-16 mr-3\"></div>\n                    <h2 className=\"text-center text-lg md:text-2xl font-bold text-green-800\">{header}</h2>\n                    <div className=\"h-px bg-gradient-to-r from-transparent via-green-500 to-transparent w-12 md:w-16 ml-3\"></div>\n                  </div>\n                  \n                  {era && (\n                    <>\n                      <div className=\"p-3 md:p-4 bg-white border border-gray-300 rounded-lg shadow-lg w-full h-full\">\n                        <div className={`${styles.scrollingCard} overflow-y-auto pr-2 md:max-h-[calc(100vh-24rem)]`}>\n                          <div className=\"prose prose-sm md:prose-base max-w-none\">\n                            {formatEraText(era)}\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* Share Button */}\n                      <button\n                        onClick={handleOpenShareModal}\n                        className=\"mt-3 px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg shadow-md transition-all flex items-center justify-center\"\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path d=\"M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z\" />\n                        </svg>\n                        Share My Era\n                      </button>\n                    </>\n                  )}\n                </div>\n              </div>\n            )}\n            \n            <button\n              onClick={() => signOut()}\n              className=\"mt-3 px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg shadow-md transition-all w-full md:w-auto\"\n            >\n              Sign Out\n            </button>\n          </div>\n        ) : (\n          <button\n            onClick={() => signIn(\"spotify\")}\n            className=\"mt-4 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-lg shadow-lg transition-all\"\n          >\n            Sign in with Spotify\n          </button>\n        )}\n      </main>\n      \n      {/* Share Modal */}\n      <ShareModal \n        isOpen={isShareModalOpen}\n        onClose={() => setIsShareModalOpen(false)}\n        header={header}\n        characters={characters}\n        era={era || \"\"}\n      />\n    </>\n  );\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 978, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}