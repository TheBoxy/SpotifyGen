{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/pages/index.tsx"],"sourcesContent":["import { signIn, signOut, useSession } from \"next-auth/react\";\nimport { useState } from \"react\";\n\nexport default function Home() {\n  const { data: session } = useSession();\n  const [era, setEra] = useState<string | null>(null);\n  \n  const getEra = async () => {\n    const tracksRes = await fetch(\"/api/spotify/top-tracks\");\n    const tracksData = await tracksRes.json();\n    \n    const gptRes = await fetch(\"/api/gpt/generate-era\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ tracks: tracksData.items }),\n    });\n    \n    const gptData = await gptRes.json();\n    setEra(gptData.era);\n  };\n  \n  return (\n    <div className=\"flex flex-col items-center p-10\">\n      {!session ? (\n        <button onClick={() => signIn(\"spotify\")} className=\"bg-green-500 p-3 rounded\">Sign in with Spotify</button>\n      ) : (\n        <>\n          <button onClick={() => signOut()} className=\"bg-red-500 p-3 rounded mb-4\">Sign out</button>\n          <button onClick={getEra} className=\"bg-blue-500 p-3 rounded\">Get My Era</button>\n          {era && <p className=\"mt-4 text-xl\">{era}</p>}\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD;IACnC,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAE9C,MAAM,SAAS;QACb,MAAM,YAAY,MAAM,MAAM;QAC9B,MAAM,aAAa,MAAM,UAAU,IAAI;QAEvC,MAAM,SAAS,MAAM,MAAM,yBAAyB;YAClD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE,QAAQ,WAAW,KAAK;YAAC;QAClD;QAEA,MAAM,UAAU,MAAM,OAAO,IAAI;QACjC,OAAO,QAAQ,GAAG;IACpB;IAEA,qBACE,qKAAC;QAAI,WAAU;kBACZ,CAAC,wBACA,qKAAC;YAAO,SAAS,IAAM,CAAA,GAAA,mIAAA,CAAA,SAAM,AAAD,EAAE;YAAY,WAAU;sBAA2B;;;;;iCAE/E;;8BACE,qKAAC;oBAAO,SAAS,IAAM,CAAA,GAAA,mIAAA,CAAA,UAAO,AAAD;oBAAK,WAAU;8BAA8B;;;;;;8BAC1E,qKAAC;oBAAO,SAAS;oBAAQ,WAAU;8BAA0B;;;;;;gBAC5D,qBAAO,qKAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;;;AAK/C"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}