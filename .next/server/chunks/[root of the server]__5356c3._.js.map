{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/pages/api/gpt/generate-era.ts"],"sourcesContent":["// pages/api/gpt/generate-era.ts\nimport type { NextApiRequest, NextApiResponse } from \"next\";\nimport OpenAI from \"openai\";\n\nconst openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });\n\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\n  if (req.method !== \"POST\") return res.status(405).json({ error: \"Method not allowed\" });\n  \n  const { tracks } = req.body;\n  if (!tracks || tracks.length === 0) return res.status(400).json({ error: \"No tracks provided\" });\n  \n  \n  const songList = tracks.map((t: { name: string; artists: { name: string }[] }) => `${t.name} by ${t.artists[0].name}`).join(\", \");\n  \n  const prompt = `Talk in a gen z way/mindset. Based on this list of my top 10 most listened songs in the past month: ${songList}, come up with a description of what era Im currently in. This era should be defined in no more than 10 words and should be stated in the first sentence alone. Then decribe the explaination for the era. Then describe the era in way that anaylzes and comes up with an accurate description based on the songs genre, name, bpm, emotions and descriptions that can be found in genius.com. Don't mention Gen z in the response and make it sound cool not nerdy, chill. Then give 3 suggestions on cartoon characters that match this vibe.`;\n\n  const response = await openai.chat.completions.create({\n    model: \"gpt-4o-mini\", // Change from \"gpt-4\" to \"gpt-4-turbo\"\n    messages: [\n      { role: \"system\", content: \"You are a music analyst with a background in psychology.\" },\n      { role: \"user\", content: prompt }\n    ],\n  });\n\n  const gptResponse = response.choices[0]?.message?.content;\n  if (!gptResponse) return res.status(500).json({ error: \"Failed to generate response from OpenAI\" });\n  const headerMatch = gptResponse.match(/\\*\\*(.*?)\\*\\*/);\n  const header = headerMatch ? headerMatch[1] : \"Your Current Era\";\n\n  // Remove the first sentence from the response\n  const explanation = headerMatch ? gptResponse.replace(headerMatch[0], \"\").trim() : gptResponse.trim();\n\n  res.status(200).json({ era: explanation, header });\n}\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;AAEhC;;;;;;AAEA,MAAM,SAAS,IAAI,4GAAA,CAAA,UAAM,CAAC;IAAE,QAAQ,QAAQ,GAAG,CAAC,cAAc;AAAC;AAEhD,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC7E,IAAI,IAAI,MAAM,KAAK,QAAQ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAAE,OAAO;IAAqB;IAErF,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,IAAI;IAC3B,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAAE,OAAO;IAAqB;IAG9F,MAAM,WAAW,OAAO,GAAG,CAAC,CAAC,IAAqD,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC;IAE5H,MAAM,SAAS,CAAC,oGAAoG,EAAE,SAAS,ghBAAghB,CAAC;IAEhpB,MAAM,WAAW,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACpD,OAAO;QACP,UAAU;YACR;gBAAE,MAAM;gBAAU,SAAS;YAA2D;YACtF;gBAAE,MAAM;gBAAQ,SAAS;YAAO;SACjC;IACH;IAEA,MAAM,cAAc,SAAS,OAAO,CAAC,EAAE,EAAE,SAAS;IAClD,IAAI,CAAC,aAAa,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAAE,OAAO;IAA0C;IACjG,MAAM,cAAc,YAAY,KAAK,CAAC;IACtC,MAAM,SAAS,cAAc,WAAW,CAAC,EAAE,GAAG;IAE9C,8CAA8C;IAC9C,MAAM,cAAc,cAAc,YAAY,OAAO,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,IAAI,KAAK,YAAY,IAAI;IAEnG,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAAE,KAAK;QAAa;IAAO;AAClD"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Desktop/Spotify%20Era/frontend/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,iIAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,iIAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}